function load_1(){
	document.querySelector('.main').innerHTML = "<p><b>Тема работы:</b> Создание макета для организации и публикации лабораторных работ.</p><p><b>Цель работы:</b> Сверстать web-страницу средствами HTML5 и CSS3.</p><br><h3>Макет сайта</h3>Описание тегов, используемых для верстки сайта.<br><p>Тег &lt;article&gt; задает содержание сайта вроде новости, статьи, записи блога, форума или др.</p><br><p>Тег &lt;aside&gt; определяет блок сбоку от контента для размещения рубрик, ссылок на архив, меток и другой информации. Такой  блок, как правило, называется «сайдбар» или «боковая панель».</p><br><p>Тег &lt;footer&gt; задает «подвал» сайта или раздела, в нем может располагаться имя автора, дата документа, контактная и правовая информация.</p><br><p>Тег &lt;header&gt; задает «шапку» сайта или раздела, в которой обычно располагается заголовок.</p><br><p>Тег &lt;nav&gt; задает навигацию по сайту. Если на странице не сколько блоков ссылок, то в &lt;nav&gt; обычно помещают приоритетные ссылки. Также допустимо использовать несколько тегов &lt;nav> в документе. Запрещается вкладывать &lt;nav> внутрь &lt;address&gt;.</p><br><p>Тег &lt;section&gt; задает раздел документа, может применяться для блока новостей, контактной информации, глав текста, вкладок в диалоговом окне и др. Раздел обычно содержит заголовок. Допускается вкладывать один тег &lt;section&gt; внутрь другого.</p><br>Сверстайте главную страницу своего сайта по вариантам (табл. 1).<br>Технические требования к сайту:<br><ol><li> логотип – картинка (например, логотип кафедры);</li><li> заголовок – название дисциплины;</li><li> панель навигации – для ссылок на внутренние страницы сайта – номера лабораторных работ;</li><li> ссылочная панель – гиперссылки на сайт университета, уч.портал и т.д. В качестве гиперссылки используется картинка и текстовая подпись. Гиперссылки открываются в новом окне;</li><li> основной документ – вступительное слово, поясняющее текст про сайт, тему и задание лаб.работы.</li><li> &lt;footer&gt; – «подвал» сайта или раздела – Ф.И.О. разработчика, дата документа.</li></ol>Макет сайта задается панелями с использованием абсолютного позиционирования. Для внутренних элементов применяется относительное позиционирование. Для создания меню следует использовать стилевые таблицы. <br>Оформить содержимое страниц с использованием стилевых таблиц. Применить различные способы форматирования  текста, абзацев, рисунков, списков и таблиц.<br>";
}

function load_2(){
	document.querySelector('.main').innerHTML = "<ol><li>Ввести с клавиатуры строку и вывести второе с конца слово в этой строке.<p><input id=input_1 type=text><input type=button value=Нажми меня onclick=task2_1()></p>Вывод: <span id=output_1></span><br></li><li>Ввести две строки и проверить, являются ли они анаграммами друг друга (составлены из того же набора символов).<p><input id=input_2_1 type=text> <input id=input_2_2 type=text><input type=button value=Нажми меня onclick=task2_2()></p>Вывод: <span id=output_2></span><br></li><li>Ввести с клавиатуры строку и вывести строку, из которой удалены все гласные буквы.<p><input id=input_3 type=text><input type=button value=Нажми меня onclick=task2_3()></p>Вывод: <span id=output_3></span><br></li><li>Сгенерировать массив из случайных целых чисел от 100 до 200.<p><input type=button value=Нажми меня onclick=task2_4()></p>Вывод: <span id=output_4></span><br></li><li>Сгенерировать строку из случайных латинских букв.<p><input type=button value=Нажми меня onclick=task2_5()></p>Вывод: <span id=output_5></span><br></li><li>Найти в массиве количество и сумму элементов, которые делятся на 3.<p><input id=input_6 type=text><input type=button value=Нажми меня onclick=task2_6()></p>Вывод: <span id=output_6></span><br></li><li>Написать алгоритм сортировки массива методом пузырька, обменом или вставками.<p><input id=input_7 type=text><input type=button value=Нажми меня onclick=task2_7()></p>Вывод: <span id=output_7></span><br></li><li>Подсчитать кол-во часов между 13 августа 1988 года 10:00 и 22 декабря 2033 года 17:00<p><input type=button value=Нажми меня onclick=task2_8()></p>Вывод: <span id=output_8></span><br></li><li>Вывести кол-во секунд до конца сегодняшнего дня.<p><input type=button value=Нажми меня onclick=task2_9()></p>Вывод: <span id=output_9></span><br></li><li>Сгенерировать массив из случайных дат в диапазоне от 1 января 2000 года до 1 января 2020 года. Отсортировать этот массив и вывести разницу в секундах между ближайшими среди них.<p><input type=button value=Нажми меня onclick=task2_10()></p>Вывод: <span id=output_10></span><br></li></ol>";
}

function load_3(){
	document.querySelector('.main').innerHTML = "<ol><li>Сгенерировать строку из случайных латинских букв. Строку разбить на символы, каждый символ перевести в верхний регистр, собрать массив из кодов этих символов, оставить только те коды, которые не делятся на 5 и посчитать сумму остатков деления этих кодов на 5. (Указание – использовать методы обхода массивов).<p><input type=button value=Нажми меня onclick=task3_1()></p>Вывод: <span id=output_1></span><br></li><li>Сгенерировать массив из 1000 случайных чисел в диапазоне s ± p%, отсортировать его по убыванию остатков от деления на 10. <p>s: <input id=input_2_1 type=number> p: <input id=input_2_2 type=number> <input type=button value=Нажми меня onclick=task3_2()></p>Вывод: <span id=output_2></span><br></li><li>Создать функцию, которая вернет: a. Среднее арифметическое своих аргументов b. Среднее гармоническое своих аргументов <p><input id=input_3 type=text><input type=button value=Нажми меня onclick=task3_3()></p>Вывод: <span id=output_3></span><br></li><li>Создать массив из списка имен. Сгенерировать массив из 20 объектов типа «Человек». У каждого объекта должно быть случайным образом выбрано имя, возраст, а также метод, который выводит имя и возраст данного человека. Прогнать методом обхода по этому массиву и заставить каждого человека представиться.<p><input type=button value=Нажми меня onclick=task3_4()></p>Вывод: <span id=output_4></span><br></li></ol>";
}

function load_4(){
	document.querySelector('.main').innerHTML = "<ol>" +
	 "<li>Создайте класс Vector для представления вектора в трехмерном пространстве (свойства для координат x, y, z). Добавьте в прототип Vector два метода plus() и scalar() для вычисления суммы двух векторов и скалярного произведения двух векторов. Добавьте в прототип свойство только для чтения length, подсчитывающее длину вектора. Переопределите в классе Vector методы toString() и valueOf(). Протестируйте созданный класс.<br>" + 
	 "<div class=task-container>" +
					 "<div class=task>" +
						 "V1<br>x:<input id=input_1_1 type=number><br>" +
						 "y:<input id=input_1_2 type=number><br>" +
						 "z:<input id=input_1_3 type=number>" +
				  "</div>" +
				  "<div class=task>" +
					 	"V2<br>x:<input id=input_1_4 type=number><br>" +
					 	"y:<input id=input_1_5 type=number><br>" +
					 	"z:<input id=input_1_6 type=number>" +
				  "</div> " +
				  "<input type=button value=Нажми меня onclick=task4_1()>" +
			  "</div>" +
			 	"Вывод: <span id=output_1></span>" +
		  "</li><br>" +
		  "<li>Задача имеет название, описание, дату начала и дату окончания. Любая задача может иметь набор дочерних подзадач. Создайте класс для представления задачи. Выполняемая задача – наследник задачи с дополнительными свойствами: - процент выполнения (число); - флаг задача завершена.<br>" +
		  "<div class=task-container>" +
			  "<div class=task>" +
				 	"Задача<br>Название: <input id=input_2_1 type=text><br>Описание: <input id=input_2_2 type=text><br>Начало: <input id=input_2_3 type=date><br>Конец: <input id=input_2_4 type=date>" +
			  "</div>" +
			  "<div class=task>" +
				 	"Выполняемая задача <br>Название: <input id=input_2_5 type=text><br>Описание: <input id=input_2_6 type=text><br>Начало: <input id=input_2_7 type=date><br>Конец: <input id=input_2_8 type=date><br>Процент выполнения: <input id=input_2_9 type=number><br>Задача завершена: <input id=input_2_10 type=checkbox>" +
			  "</div>" +
			  "<input type=button value=Нажми меня onclick=task4_2()>" +
		  "</div>" +
		 	"Вывод: <span id=output_2></span>" +
		  "</li><br>" +
		  "<li>Реализовать базовый класс Point, который характеризуется положением на осях координат (свойства для координат x, y, z) и условным обозначением (имя объекта-точки). Определите класс-наследник ColorPoint, который наследует свойства родительского класса и имеет дополнительную характеристику (с дополнительными полем &quot;цвет&quot; ). Создать коллекцию разработанных объектов и создать методы класса для доступа к значениям его полей. Написать функцию, которая осуществляет поиск по набору точек и ищет ближайюшую для заданных координат.<br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
					 	"X: <input id=input_3_1 type=number><br>" +
					 	"Y: <input id=input_3_2 type=number><br>" +
					 	"Z: <input id=input_3_3 type=number>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_3()>" +
			  "</div>" +
				 "Вывод: <span id=output_3></span><br>" +
		  "</li><br>" +
		  "<li>Реализовать базовый класс Фигура, который характеризуется набором точек (x,y). Создать классы наследники (Квадрат, Круг, Треугольник). Для классов наследников реализовать возможность вычисления площади и периметра, методы доступа к расчётным значениям.<br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
					 	"Квадрат<br>" +
					 	"X1: <input id=input_4_1 type=number><br>" +
					 	"Y1: <input id=input_4_2 type=number><br>" +
					 	"X2: <input id=input_4_3 type=number><br>" +
					 	"Y2: <input id=input_4_4 type=number>" +
				  "</div>" +
				  "<div class=task>" +
					 	"Круг<br>" +
					 	"X1: <input id=input_4_5 type=number><br>" +
					 	"Y1: <input id=input_4_6 type=number><br>" +
					 	"X2: <input id=input_4_7 type=number><br>" +
					 	"Y2: <input id=input_4_8 type=number>" +
				  "</div>" +
				  "<div class=task>" +
					 	"Треугольник<br>" +
					 	"X1: <input id=input_4_9 type=number><br>" +
					 	"Y1: <input id=input_4_10 type=number><br>" +
					 	"X2: <input id=input_4_11 type=number><br>" +
					 	"Y2: <input id=input_4_12 type=number><br>" +
					 	"X3: <input id=input_4_13 type=number><br>" +
					 	"Y3: <input id=input_4_14 type=number>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_4()>" +
			  "</div>Вывод: <span id=output_4></span></li><br>" +
		  "<li>Реализуйте класс Работник, который будет иметь следующие свойства: 	имя, фамилия, ставка за день работы, количество отработанных дней. Также класс должен иметь метод getSalary(), который будет выводить зарплату работника. Создайте класс наследник для работников с определённой специализацией (маляр, штукатур), в котором добавьте поле “тип выполняемых работ”. Реализуйте возможность формирования бригады с работниками различной специализации.<br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
						 "Маляр<br>" +
						 "Имя: <input id=input_5_1 type=text><br>" +
						 "Фамилия: <input id=input_5_2 type=text><br>" +
						 "Ставка: <input id=input_5_3 type=number><br>" +
						 "Отработанные дни: <input id=input_5_4 type=number>" +
				  "</div>" +
				  "<div class=task>" +
						 "Штукатур<br>" +
						 "Имя: <input id=input_5_5 type=text><br>" +
						 "Фамилия: <input id=input_5_6 type=text><br>" +
						 "Ставка: <input id=input_5_7 type=number><br>" +
						 "Отработанные дни: <input id=input_5_8 type=number>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_5()>" +
			  "</div>" +
				 "Вывод: <span id=output_5></span><br>" +
		  "</li><br>" +
		  "<li>Реализуйте родительский класс Validator с произвольными полями и методами доступа к ним. Создайте классы-наследники для валидации телефонных номеров, email-адресов и  доменов сайтов. Сформируйте тестовый набор данных для проверки с помощью реализованных классов-валидаторов. Для проверки значений допускается использование регулярных выражений.<br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
						 "Телефон: <input id=input_6_1 type=text><br>" +
						 "Почта: <input id=input_6_2 type=text><br>" +
						 "Домен: <input id=input_6_3 type=text><br>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_6()>" +
			  "</div>" +
				 "Вывод: <span id=output_6></span><br>" +
		  "</li><br>" +
		  "<li>Реализуйте класс Библиотека, в котором будет храниться коллекция объектов класса Издание. Создайте классы-наследники для различных типов изданий с соответствующими полями (имя, год издания, тип, автор(ы) и т.д.). Предусмотреть возможность поиска издания по нескольким параметрам и их сортировки по автору.<br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
						 "Поиск по: <input id=input_7_1 type=text>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_7()>" +
			  "</div>" +
				 "Вывод: <span id=output_7></span><br>" +
		  "</li><br>" +
		  "<li>Реализуйте класс Факультет, который хранит список студентов. Класс Студент содержит информацию о студенте. Создайте классы-наследники для студентов отдельных специальностей. В программе предусмотреть возможность вывода всех студентов заданной специальности и поиска студента по фамилии.<br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
						 "Поиск по предмету: <input id=input_8_1 type=text><br>" +
						 "Поиск по фамилии: <input id=input_8_2 type=text>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_8()>" +
			  "</div>" +
				 "Вывод: <span id=output_8></span><br>" +
		  "</li><br>" +
		  "<li>Реализуйте класс Автопарк, который содержит коллекцию автомобилей организации. Класс Автомобиль должен содержать следующие поля: марка, год выпуска, дата последнего обслуживания, регистрационный номер. Создать классы-наследники для транспортных средств различной категории (легковые, грузовый и т.д.) Предусмотреть возможность вывода автомобилей соответствующей категории и поиска автомобиля по номеру.<br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
						 "Поиск по номеру: <input id=input_9_1 type=text><br>" +
						 "Поиск по категории: <input id=input_9_2 type=text>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_9()>" +
			  "</div>" +
				 "Вывод: <span id=output_9></span><br>" +
		  "</li><br>" +
		  "<li>Разработать класс Пользователь. Реализовать иерархию классов-наследников согласно типам пользователей в системе организации (класс Информационная система). Предусмотреть вывод пользователей определённой группы, поиск пользователя. Реализовать возможность блокировки, добавления и удаления пользователя из системы. <br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
						 "Поиск по типу: <input id=input_10_1 type=text><br>" +
						 "Поиск по фамилии: <input id=input_10_2 type=text>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_10()>" +
			  "</div>" +
				 "Вывод: <span id=output_10></span><br>" +
		  "</li><br>" +
		  "<li>Создать класс Тур. Организовать иерархию наследования туров согласно их типам (велотуры, автотуры, гастрономические туры и т.д.). Предусмотреть возможность подбора тура заданного типа на конкретную дату. При выводе списка туров производить группировку по типам. <br>" +
			  "<div class=task-container>" +
				  "<div class=task>" +
						 "Поиск по дате: <input id=input_11 type=text>" +
				  "</div>" +
				  "<input type=button value=Нажми меня onclick=task4_11()>" +
			  "</div>" +
				 "Вывод: <span id=output_11></span><br>" +
		  "</li><br>" +
	  "</ol>";
}

function load_5(){
	onLoad();
}